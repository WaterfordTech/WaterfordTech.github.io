{"version":3,"sources":["landing-splash.jpeg","landing-splash-vertical.jpeg","components/SlackSignupForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","styled","button","Input","input","spin","keyframes","SpinningIcon","Spinner","Form","useState","submitted","setSubmitted","submitting","setSubmitting","error","setError","timeout","setTimeoutFn","role","aria-label","onSubmit","e","preventDefault","data","FormData","target","get","includes","clearTimeout","fetch","method","body","mode","then","res","ok","status","t","setTimeout","catch","autocomplete","name","placeholder","type","disabled","style","color","GlobalStyle","createGlobalStyle","LandingContainer","div","landingSplash","vertLandingSplash","HeaderContainer","header","HeaderLinks","CTAContainer","FormContainer","GithubLogo","Github","DetailsContainer","ContentContainer","EventsCalendar","EventsCalendarLarge","EventsCalendarSmall","Footer","App","href","size","id","title","src","width","height","frameborder","scrolling","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56c710eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing-splash.01c4e6ad.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/landing-splash-vertical.0946fd0a.jpeg\";","import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components'\nimport {Spinner3 as Spinner} from 'styled-icons/evil'\n\nconst Button = styled.button`\n  background: white;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1rem;\n  padding: 0.25rem 1rem;\n  font-size: 1.5rem;\n  min-width: 100px;\n\n  &:hover {\n    border: 2px solid mediumvioletred;\n    color: mediumvioletred;\n    shadow: none;\n  }\n\n  & > svg {\n    height: 1.5rem; width: auto;\n  }\n`\n\nconst Input = styled.input`\n  background: white;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1rem;\n  padding: 0.25rem 1rem;\n  font-size: 1.5rem;\n\n  &:hover, &:focus {\n    border: 2px solid mediumvioletred;\n    color: mediumvioletred;\n    shadow: none;\n  }\n`\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst SpinningIcon = styled(Spinner)`\n  animation: 2s linear ${spin} infinite;\n`\n\nfunction Form () {\n    const [submitted, setSubmitted] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [error, setError] = useState(false)\n    const [timeout, setTimeoutFn] = useState(null)\n  \n    const onSubmit = (e) => {\n      e.preventDefault()\n      const data = new FormData(e.target);\n  \n      if (submitting || !(data.get('emailAddress') ) || !(data.get('emailAddress')).includes('@')) {\n        return;\n      }\n  \n      if (timeout) {\n        clearTimeout(timeout)\n        setTimeoutFn(null)\n      }\n  \n      setError(false)\n      setSubmitted(false)\n      setSubmitting(true)\n  \n  \n      fetch('//docs.google.com/forms/d/e/1FAIpQLSfSOuBAy3L5VR8TRsMSwIZVPcZYHLOIGnh2QTCt_UhEliSFEg/formResponse', {\n        method: 'POST',\n        body: data,\n        mode: 'no-cors'\n      }).then((res) => {\n        setSubmitting(false)\n        if (res.ok || res.status === 0) {\n          setSubmitted(true)\n        } else {\n          setError('There was an issue submitting. Please try again.')\n        }\n        const t = setTimeout(() => {\n            setSubmitted(false)\n            setError(false)\n            setTimeoutFn(null)\n        }, 10000)\n        setTimeoutFn(t)\n      }).catch((e) => {\n        setSubmitting(false)\n        setError('There was an issue submitting. Please try again.')\n        const t = setTimeout(() => {\n            setSubmitted(false)\n            setError(false)\n            setTimeoutFn(null)\n        }, 5000)\n        setTimeoutFn(t)\n      });\n    }\n  \n    if (submitted) {\n      return <h3>Submitted! Thank you. <span role='img' aria-label='bowing man'>🙇‍♂️</span></h3>\n    }\n  \n    return <form onSubmit={onSubmit}>\n      <Input\n        autocomplete=\"email\"\n        name=\"emailAddress\"\n        placeholder=\"Your email\"\n        type=\"email\"\n      />\n      <Button\n        type=\"submit\"\n        disabled={submitting}\n      >\n        {submitting ? <SpinningIcon /> : 'Invite Me!' }\n      </Button>\n      { error ? <p style={{color: 'red'}}>{error}</p> : '' }\n    </form>\n  }\n  \nexport default Form\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components'\n// import logo from './logo.svg';\nimport { Github } from 'styled-icons/fa-brands'\nimport { Slack } from 'styled-icons/boxicons-logos'\nimport landingSplash from './landing-splash.jpeg'\nimport vertLandingSplash from './landing-splash-vertical.jpeg'\nimport Form from './components/SlackSignupForm'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-size: 20px;\n  }\n  \n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  a {\n    color: palevioletred;\n\n    &:hover {\n      color: mediumvioletred;\n    }\n  }\n`\n\nconst LandingContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: start;\n  min-height: 100vh;\n  overflow: hidden;\n  color: white;\n\n  text-align: center;\n\n  &::before {\n    content: \"\";\n    z-index: -1;\n    position: absolute;\n    top: 0; left: 0;\n    width: 100%; height: 100%;\n    background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.5)), url(\"${landingSplash}\") no-repeat center fixed;\n\n    @media (max-width: 900px) {\n      background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.5)), url(\"${vertLandingSplash}\") no-repeat center fixed;\n    }\n    background-color: #111;\n    background-attachment: fixed;\n  }\n`\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-content: center;\n  top: 0; left: 0;\n  padding: 2rem;\n\n  @media (max-width: 900px) {\n    justify-content: center;\n    & div:last-child {\n      display: none;\n    }\n  }\n`\n\nconst HeaderLinks = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & a {\n    margin: 1rem;\n    font-size: 1.5rem;\n    font-weight: 700;\n  }\n\n  @media (max-width: 900px) {\n    flex-direction: column;\n  }\n`\n\nconst CTAContainer = styled.div`\n  color: white;\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 600px;\n  border: 3px solid palevioletred;\n  border-radius: .5em;\n  padding: 1rem;\n  margin: 1rem;\n  background: rgba(0,0,0,0.3);\n  backdrop-filter: blur(6px);\n  & > * {\n    margin: 1rem;\n  }\n`\n\nconst GithubLogo = styled(Github)`\n  color: white;\n  &:hover {\n    color: rgba(150,150,150,1);\n  }\n`\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: stretch;\n`\n\nconst ContentContainer = styled.div`\n  max-width: 35ch;\n  padding: 1rem;\n  border: 1px solid lightgray;\n  margin: 1rem;\n  border-radius: 5px;\n`\n\nconst EventsCalendar =styled.div`\n  padding: 1rem;\n  & iframe {\n    overflow: hidden;\n    pointer-events:none;\n  }\n`\n\nconst EventsCalendarLarge =styled.div`\n  display: flex;\n  justify-content: center;\n  @media (max-width: 800px) {\n    display: none;\n  }\n`\nconst EventsCalendarSmall =styled.div`\n  display: flex;\n  justify-content: center;\n  @media (min-width: 800px) {\n    display: none;\n  }\n`\n\nconst Footer = styled.div`\n  min-height: 100px;\n  background-color: #111111;\n  padding: 1rem;\n  color: white;\n`\n\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <LandingContainer>\n        <HeaderContainer>\n          <HeaderLinks>\n            <a href=\"/\">Home</a>\n            <a href=\"/#about-us\">About us</a>\n            <a href=\"/#events-calendar\">Events Calendar</a>\n          </HeaderLinks>\n          <div>\n            <a href=\"//github.com/waterfordtech/waterfordtech.github.io/\"><GithubLogo size=\"48\"/></a>\n          </div>\n        </HeaderContainer>\n        <CTAContainer>\n          <FormContainer>\n            <h1>Join the Waterford Tech Community on Slack <Slack size=\"48\"/></h1>\n            <p>\n              The Waterford Tech Community just got a new home!\n              This community Slack was created to enable local tech collaboration and facilitate networking in the area.\n              <br/>\n              Check it out!\n            </p>\n            <Form />\n          </FormContainer>\n        </CTAContainer>\n      </LandingContainer>\n      <DetailsContainer id=\"about-us\">\n        <ContentContainer>\n          <h2>Who are we?</h2>\n          <p>\n            We're the Waterford Tech Community!\n            We're a mix of pressionals, students and hobbyists with a connection to the <a href=\"//en.wikipedia.org/wiki/Waterford\">Deise</a> in the Sunny South-East of Ireland.\n            The Tech Community has grown significantly in the last few years, and needed a home to hang out online, and it's our hope that this website and open Slack community will become that home. {\"<3\"}\n          </p>\n        </ContentContainer>\n        <ContentContainer>\n          <h2>Who is this for?</h2>\n          <p>\n            This community is for anyone involved in tech in the Sunny South-East!\n            No matter if you're a developer, designer, PM, manager, analyst, recruiter, student, teacher or even a hobbyist, we have a home for you.\n            Waterford is home to many different companies and organisations involved with tech, and we want them represented! :)\n          </p>\n        </ContentContainer>\n        <ContentContainer>\n          <h2>Slack Information</h2>\n          <p>\n            The Slack group is open for anyone to join in.\n            It's important to keep the community welcoming and approachable, and to this end we ask people to abide by the <a href=\"//www.contributor-covenant.org/\">Contributor Convenant Code of Conduct</a>.\n            Please contact an admin for assistance if you need any help, support or want to report an issue at any time.\n          </p>\n        </ContentContainer>\n      </DetailsContainer>\n      <hr />\n      <EventsCalendar id=\"events-calendar\">\n        <h2>Waterford Events Calendar</h2>\n        <p>A google calendar can be found at <a href=\"https://calendar.google.com/calendar/embed?src=c8fpiiv7hds3aig26gb3ccpggc%40group.calendar.google.com&ctz=Europe%2FDublin\">this link.</a></p>\n        <EventsCalendarLarge>\n          <iframe title=\"desktop calendar\" src=\"https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=Europe%2FDublin&amp;src=YzhmcGlpdjdoZHMzYWlnMjZnYjNjY3BnZ2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23F4511E&amp;title=Waterford%20Tech%20Events&amp;showTitle=1&amp;showNav=0&amp;showDate=1&amp;showPrint=0&amp;showTabs=0&amp;showCalendars=1&amp;showTz=1&amp;mode=MONTH\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe>\n        </EventsCalendarLarge>\n        <EventsCalendarSmall>\n          <iframe title=\"mobile calendar\" src=\"https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=Europe%2FDublin&amp;src=YzhmcGlpdjdoZHMzYWlnMjZnYjNjY3BnZ2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23F4511E&amp;title=Waterford%20Tech%20Events&amp;showTitle=1&amp;showNav=0&amp;showDate=1&amp;showPrint=0&amp;showTabs=0&amp;showCalendars=1&amp;showTz=1&amp;mode=AGENDA\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe>\n        </EventsCalendarSmall>\n      </EventsCalendar>\n      <Footer>\n        <h3>Waterford Tech Community</h3>\n        <p>Copyright © 2020 Waterford Tech Community</p>\n      </Footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}